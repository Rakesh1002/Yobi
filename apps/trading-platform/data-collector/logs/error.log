{"level":"error","message":"Failed to get quote for AAPL: No data found for AAPL.NS","service":"yfinance-provider","stack":"Error: No data found for AAPL.NS\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:97:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:236:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:220:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T18:00:03.526Z"}
{"level":"error","message":"Failed to get quote for AAPL: No data found for AAPL.NS","service":"yfinance-provider","stack":"Error: No data found for AAPL.NS\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:97:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:236:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:220:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T18:10:03.600Z"}
{"level":"error","message":"Failed to get quote for AAPL: No data found for AAPL.NS","service":"yfinance-provider","stack":"Error: No data found for AAPL.NS\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:97:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:236:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:220:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T18:20:03.660Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:137:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:276:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:268:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T18:40:02.139Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:137:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:276:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:268:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T18:50:02.756Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:137:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:276:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:268:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T19:10:02.657Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for GODREJCP: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:31\n\n  60 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name)\n  61 \n  62 // Store market data in PostgreSQL\n→ 63 await prisma.marketData.create(\nServer has closed the connection.","meta":{"modelName":"MarketData"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:31\n\n  60 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name)\n  61 \n  62 // Store market data in PostgreSQL\n→ 63 await prisma.marketData.create(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:197:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:80:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:23:11)","timestamp":"2025-07-21T19:19:27.409Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:31\n\n  60 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name)\n  61 \n  62 // Store market data in PostgreSQL\n→ 63 await prisma.marketData.create(\nServer has closed the connection.","meta":{"modelName":"MarketData"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:31\n\n  60 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name)\n  61 \n  62 // Store market data in PostgreSQL\n→ 63 await prisma.marketData.create(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:63:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:197:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:80:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:23:11)","timestamp":"2025-07-21T19:19:27.411Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:137:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:276:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:268:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T19:30:03.349Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:137:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:276:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:268:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T19:40:06.959Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T20:00:02.574Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T20:10:03.022Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-21T23:00:03.850Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T02:10:03.804Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T07:30:03.103Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T08:30:02.889Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T09:15:27.290Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T09:40:02.785Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T09:50:03.860Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T10:00:04.834Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T10:10:04.284Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T10:20:03.437Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T10:30:04.204Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T11:20:05.185Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T11:30:03.832Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T12:10:04.036Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T12:20:06.205Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T12:30:05.345Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T12:40:04.428Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T12:50:03.127Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T13:40:01.621Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T13:50:01.107Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T14:00:03.761Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T14:30:02.559Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T14:40:02.973Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T20:40:09.175Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T21:10:03.067Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-22T21:20:04.445Z"}
{"level":"error","message":"Failed to get quote for AAPL: Cannot read properties of undefined (reading 'name')","service":"yfinance-provider","stack":"TypeError: Cannot read properties of undefined (reading 'name')\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:139:21)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:282:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:64:24)","timestamp":"2025-07-23T03:10:04.134Z"}
{"level":"error","message":"Failed to get quote for APPLE: No data found for APPLE","service":"yfinance-provider","stack":"Error: No data found for APPLE\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:215:27)\n    at async testQuoteAndSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-quote-and-search.js:24:27)","timestamp":"2025-07-23T03:23:01.181Z"}
{"level":"error","message":"Failed to get quote for APPLE: No data found for APPLE","service":"yfinance-provider","stack":"Error: No data found for APPLE\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:217:27)\n    at async testEnhancedSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-enhanced-search.js:20:23)","timestamp":"2025-07-23T03:26:45.650Z"}
{"level":"error","message":"Failed to get quote for MICROSOFT: No data found for MICROSOFT","service":"yfinance-provider","stack":"Error: No data found for MICROSOFT\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:217:27)\n    at async testEnhancedSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-enhanced-search.js:20:23)","timestamp":"2025-07-23T03:26:49.324Z"}
{"level":"error","message":"Failed to get quote for TESLA: No data found for TESLA","service":"yfinance-provider","stack":"Error: No data found for TESLA\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:217:27)\n    at async testEnhancedSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-enhanced-search.js:20:23)","timestamp":"2025-07-23T03:26:54.372Z"}
{"level":"error","message":"Failed to get quote for XYZ123: No data found for XYZ123","service":"yfinance-provider","stack":"Error: No data found for XYZ123\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:217:27)\n    at async testEnhancedSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-enhanced-search.js:20:23)","timestamp":"2025-07-23T03:26:58.303Z"}
{"level":"error","message":"Failed to get quote for XYZ123: No data found for XYZ123","service":"yfinance-provider","stack":"Error: No data found for XYZ123\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:90:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.searchSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/dist/providers/YFinanceProvider.js:244:31)\n    at async testEnhancedSearch (/Users/rakesh/yobi/apps/trading-platform/data-collector/test-enhanced-search.js:20:23)","timestamp":"2025-07-23T03:27:00.795Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"TITAN","timestamp":"2025-07-23T09:15:55.521Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:15:55.521Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:15:55.521Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ADANIPORTS","timestamp":"2025-07-23T09:16:03.200Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.215Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.202Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TATAMOTORS","timestamp":"2025-07-23T09:16:03.367Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.368Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.368Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"COALINDIA","timestamp":"2025-07-23T09:16:03.438Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.440Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:03.439Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NTPC","timestamp":"2025-07-23T09:16:04.080Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.081Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.080Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SUNPHARMA","timestamp":"2025-07-23T09:16:04.111Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.112Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.112Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INDUSINDBK","timestamp":"2025-07-23T09:16:04.114Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.114Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.114Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TECHM","timestamp":"2025-07-23T09:16:04.122Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.122Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.122Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"M&M","timestamp":"2025-07-23T09:16:04.140Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for M&M: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.140Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for M&M: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.140Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TITAN","timestamp":"2025-07-23T09:16:04.143Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.144Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.144Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"POWERGRID","timestamp":"2025-07-23T09:16:04.146Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.146Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:04.146Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:16:12.431Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:12.434Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:12.433Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:16:21.830Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:16:21.839Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:16:22.494Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.497Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.496Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SBIN","timestamp":"2025-07-23T09:16:22.975Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.976Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.976Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:16:22.985Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.986Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.985Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.990Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:16:22.988Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:22.990Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCBANK","timestamp":"2025-07-23T09:16:23.002Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.003Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.003Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ITC","timestamp":"2025-07-23T09:16:23.020Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.022Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.022Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:16:23.088Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:16:23.088Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INFY","timestamp":"2025-07-23T09:16:23.090Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.090Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:16:23.092Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"UCO","timestamp":"2025-07-23T09:16:37.526Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:37.529Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for UCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:37.528Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for CIPLA: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:40.809Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:16:40.812Z"}
{"level":"error","message":"Failed to get quote for SHRIRAMFIN: No data found for SHRIRAMFIN","service":"yfinance-provider","stack":"Error: No data found for SHRIRAMFIN\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:44.804Z"}
{"level":"error","message":"Failed to get quote for SRTRANSFIN: No data found for SRTRANSFIN","service":"yfinance-provider","stack":"Error: No data found for SRTRANSFIN\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:53.319Z"}
{"level":"error","message":"Failed to get quote for BAJAJHLDNG: No data found for BAJAJHLDNG","service":"yfinance-provider","stack":"Error: No data found for BAJAJHLDNG\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:53.469Z"}
{"level":"error","message":"Failed to get quote for PNBHOUSING: No data found for PNBHOUSING","service":"yfinance-provider","stack":"Error: No data found for PNBHOUSING\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:53.504Z"}
{"level":"error","message":"Failed to get quote for MANAPPURAM: No data found for MANAPPURAM","service":"yfinance-provider","stack":"Error: No data found for MANAPPURAM\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:53.552Z"}
{"level":"error","message":"Failed to get quote for CENTRALBK: No data found for CENTRALBK","service":"yfinance-provider","stack":"Error: No data found for CENTRALBK\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:17:55.876Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:19:13.416Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:19:13.417Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:19:20.216Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:20.217Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:20.217Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:19:20.749Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:19:20.749Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:19:21.091Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:21.092Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:21.091Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:19:24.522Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:24.523Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:24.523Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:19:24.758Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:19:24.759Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SBIN","timestamp":"2025-07-23T09:19:24.904Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:24.905Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:19:24.904Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:20:10.535Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:20:10.536Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:20:10.535Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INFY","timestamp":"2025-07-23T09:20:17.280Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:17.285Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:17.284Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HINDUNILVR","timestamp":"2025-07-23T09:20:17.717Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:17.718Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:17.718Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:20:18.463Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.464Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.464Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:20:18.485Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.486Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.485Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"RELIANCE","timestamp":"2025-07-23T09:20:18.511Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.512Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.512Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BHARTIARTL","timestamp":"2025-07-23T09:20:18.515Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.517Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:18.516Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:18.923Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:18.924Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"ADANIENT","timestamp":"2025-07-23T09:20:30.307Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:20:30.308Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ADANIENT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:20:30.308Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"JSWSTEEL","timestamp":"2025-07-23T09:20:44.541Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for JSWSTEEL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.549Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for JSWSTEEL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.547Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TATASTEEL","timestamp":"2025-07-23T09:20:44.555Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TATASTEEL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.556Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TATASTEEL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.557Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for APOLLOHOSP: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.619Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for APOLLOHOSP: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.626Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for UPL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.717Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for UPL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.727Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for CIPLA: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.971Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for CIPLA: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:20:44.972Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ADANIENT","timestamp":"2025-07-23T09:20:44.998Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ADANIENT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.999Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ADANIENT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:44.998Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LTIM","timestamp":"2025-07-23T09:20:45.132Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for LTIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:45.159Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LTIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:20:45.158Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:21:17.722Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:21:17.724Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJAJFINSV: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:21:20.553Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:21:20.554Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:24:13.222Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:13.224Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:13.224Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"RELIANCE","timestamp":"2025-07-23T09:24:21.510Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:21.519Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:21.517Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:24:23.679Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:23.694Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:23.686Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:24:23.807Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:23.827Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:23.811Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HINDUNILVR","timestamp":"2025-07-23T09:24:24.051Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.053Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.052Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BHARTIARTL","timestamp":"2025-07-23T09:24:24.644Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.646Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.645Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ITC","timestamp":"2025-07-23T09:24:24.652Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.654Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.653Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SBIN","timestamp":"2025-07-23T09:24:24.718Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.719Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.719Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:24:24.724Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.725Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.726Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCBANK","timestamp":"2025-07-23T09:24:24.829Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.831Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.830Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INFY","timestamp":"2025-07-23T09:24:24.851Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.853Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:24.852Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"LT","timestamp":"2025-07-23T09:24:35.206Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:35.207Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:35.207Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ULTRACEMCO","timestamp":"2025-07-23T09:24:40.424Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:40.589Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:40.584Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HCLTECH","timestamp":"2025-07-23T09:24:42.704Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:42.707Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:42.705Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJFINANCE","timestamp":"2025-07-23T09:24:42.918Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:42.941Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:42.937Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NESTLEIND","timestamp":"2025-07-23T09:24:43.004Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.005Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.005Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"WIPRO","timestamp":"2025-07-23T09:24:43.036Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.038Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.037Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"MARUTI","timestamp":"2025-07-23T09:24:43.072Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.073Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.073Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ONGC","timestamp":"2025-07-23T09:24:43.075Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.076Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.077Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ASIANPAINT","timestamp":"2025-07-23T09:24:43.088Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ASIANPAINT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.089Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ASIANPAINT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.089Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"AXISBANK","timestamp":"2025-07-23T09:24:43.122Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.123Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.123Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LT","timestamp":"2025-07-23T09:24:43.137Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.138Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:24:43.138Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"TATAMOTORS","timestamp":"2025-07-23T09:24:55.687Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:55.689Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:24:55.688Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TECHM","timestamp":"2025-07-23T09:25:04.504Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.523Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.506Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INDUSINDBK","timestamp":"2025-07-23T09:25:04.938Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.939Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.939Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TITAN","timestamp":"2025-07-23T09:25:04.943Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.944Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:04.944Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ADANIPORTS","timestamp":"2025-07-23T09:25:05.017Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.019Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.018Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SUNPHARMA","timestamp":"2025-07-23T09:25:05.024Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.025Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"POWERGRID","timestamp":"2025-07-23T09:25:05.029Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.030Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.026Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.030Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NTPC","timestamp":"2025-07-23T09:25:05.045Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.046Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.047Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"COALINDIA","timestamp":"2025-07-23T09:25:05.235Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.239Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:05.236Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:25:15.697Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:15.745Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:15.743Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:25:19.386Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:19.392Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:19.388Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SBIN","timestamp":"2025-07-23T09:25:41.349Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.375Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.372Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ITC","timestamp":"2025-07-23T09:25:41.646Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.694Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.675Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:25:41.805Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.825Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.810Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HINDUNILVR","timestamp":"2025-07-23T09:25:41.918Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.919Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:41.919Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INFY","timestamp":"2025-07-23T09:25:42.012Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.043Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.024Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:25:42.239Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.254Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.243Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:25:42.305Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.316Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.307Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BHARTIARTL","timestamp":"2025-07-23T09:25:42.352Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.352Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.352Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BHARTIARTL","timestamp":"2025-07-23T09:25:42.448Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.451Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.450Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"RELIANCE","timestamp":"2025-07-23T09:25:42.450Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.456Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.455Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"RELIANCE","timestamp":"2025-07-23T09:25:42.459Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.462Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.461Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ITC","timestamp":"2025-07-23T09:25:42.765Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HINDUNILVR","timestamp":"2025-07-23T09:25:42.776Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.796Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.785Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.798Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.787Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.815Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCBANK","timestamp":"2025-07-23T09:25:42.814Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:42.814Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:25:43.011Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:43.016Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:43.014Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCBANK","timestamp":"2025-07-23T09:25:43.046Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:43.054Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:25:43.053Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:25:43.362Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:25:43.365Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"LT","timestamp":"2025-07-23T09:25:59.197Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:59.197Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:59.197Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"LT","timestamp":"2025-07-23T09:25:59.462Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:59.463Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:25:59.463Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"WIPRO","timestamp":"2025-07-23T09:26:30.563Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ONGC","timestamp":"2025-07-23T09:26:30.624Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.654Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.654Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.639Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NESTLEIND","timestamp":"2025-07-23T09:26:30.666Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.668Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"WIPRO","timestamp":"2025-07-23T09:26:30.680Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.681Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"MARUTI","timestamp":"2025-07-23T09:26:30.685Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.686Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.669Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.682Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.688Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.576Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"MARUTI","timestamp":"2025-07-23T09:26:30.673Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.700Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for MARUTI: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.703Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HCLTECH","timestamp":"2025-07-23T09:26:30.917Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.920Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.919Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJFINANCE","timestamp":"2025-07-23T09:26:30.921Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.928Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:30.926Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LT","timestamp":"2025-07-23T09:26:31.448Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:31.450Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:31.450Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ONGC","timestamp":"2025-07-23T09:26:31.454Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:31.454Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:31.455Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HCLTECH: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:26:31.665Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HCLTECH: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:26:31.666Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ULTRACEMCO","timestamp":"2025-07-23T09:26:33.912Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:33.923Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:33.917Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NESTLEIND","timestamp":"2025-07-23T09:26:33.916Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:33.930Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for NESTLEIND: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:33.926Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"AXISBANK","timestamp":"2025-07-23T09:26:34.208Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:34.210Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:34.209Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJFINANCE","timestamp":"2025-07-23T09:26:35.157Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.165Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.163Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ULTRACEMCO","timestamp":"2025-07-23T09:26:35.177Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.183Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ULTRACEMCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.181Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LT","timestamp":"2025-07-23T09:26:35.195Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.206Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:35.205Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ASIANPAINT","timestamp":"2025-07-23T09:26:36.770Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ASIANPAINT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:36.772Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ASIANPAINT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:26:36.771Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:26:38.992Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:38.996Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:38.994Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"INDIGO","timestamp":"2025-07-23T09:26:40.730Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:40.802Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for INDIGO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:40.731Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"RELIANCE","timestamp":"2025-07-23T09:26:41.697Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:41.761Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:41.759Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"TATAMOTORS","timestamp":"2025-07-23T09:26:49.481Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:49.517Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:49.497Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"TATAMOTORS","timestamp":"2025-07-23T09:26:56.424Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:56.479Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:26:56.440Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BHARTIARTL","timestamp":"2025-07-23T09:27:34.446Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:34.489Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for BHARTIARTL: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:34.467Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ITC","timestamp":"2025-07-23T09:27:34.517Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:34.735Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ITC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:34.532Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INFY","timestamp":"2025-07-23T09:27:35.149Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.176Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for INFY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.150Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SBIN","timestamp":"2025-07-23T09:27:35.416Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.417Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for SBIN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.417Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HINDUNILVR","timestamp":"2025-07-23T09:27:35.650Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.689Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for HINDUNILVR: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:35.651Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCBANK","timestamp":"2025-07-23T09:27:35.998Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.015Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for HDFCBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.013Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"KOTAKBANK","timestamp":"2025-07-23T09:27:36.018Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.020Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for KOTAKBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.028Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TCS","timestamp":"2025-07-23T09:27:36.136Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.195Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TCS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.145Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ICICIBANK","timestamp":"2025-07-23T09:27:36.457Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.460Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ICICIBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.459Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TECHM","timestamp":"2025-07-23T09:27:36.527Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.531Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.529Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"POWERGRID","timestamp":"2025-07-23T09:27:36.561Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.581Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for POWERGRID: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.570Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"RELIANCE","timestamp":"2025-07-23T09:27:36.608Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.613Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for RELIANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.610Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TITAN","timestamp":"2025-07-23T09:27:36.623Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.626Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TITAN: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.626Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ADANIPORTS","timestamp":"2025-07-23T09:27:36.723Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.739Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for ADANIPORTS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.730Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SUNPHARMA","timestamp":"2025-07-23T09:27:36.789Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.798Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.795Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"NTPC","timestamp":"2025-07-23T09:27:36.988Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.991Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for NTPC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:36.990Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TATAMOTORS","timestamp":"2025-07-23T09:27:37.047Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.049Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.048Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"COALINDIA","timestamp":"2025-07-23T09:27:37.054Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.061Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for COALINDIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.059Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INDUSINDBK","timestamp":"2025-07-23T09:27:37.074Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.075Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.074Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"M&M","timestamp":"2025-07-23T09:27:37.163Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"All providers failed for M&M: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.164Z"}
{"clientVersion":"5.22.0","code":"P2021","level":"error","message":"Failed to store quote for M&M: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.","meta":{"modelName":"Instrument","table":"public.Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nThe table `public.Instrument` does not exist in the current database.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:27:37.164Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"LT","timestamp":"2025-07-23T09:27:51.131Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:27:51.132Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:27:51.132Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"BAJAJFINSV","timestamp":"2025-07-23T09:27:51.150Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJAJFINSV: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:27:51.151Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:27:51.151Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HCLTECH","timestamp":"2025-07-23T09:28:00.872Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:00.874Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HCLTECH: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:00.873Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ONGC","timestamp":"2025-07-23T09:28:00.937Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:00.939Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ONGC: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:00.938Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"AXISBANK","timestamp":"2025-07-23T09:28:01.093Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.094Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for AXISBANK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.093Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HDFCLIFE","timestamp":"2025-07-23T09:28:01.097Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HDFCLIFE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.098Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJFINANCE","timestamp":"2025-07-23T09:28:01.102Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.103Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HDFCLIFE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.098Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BAJFINANCE: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.103Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BRITANNIA","timestamp":"2025-07-23T09:28:01.164Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BRITANNIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.166Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BRITANNIA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.165Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"HEROMOTOCO","timestamp":"2025-07-23T09:28:01.848Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for HEROMOTOCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.848Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for HEROMOTOCO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.848Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"WIPRO","timestamp":"2025-07-23T09:28:01.863Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.864Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for WIPRO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.864Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJAJFINSV","timestamp":"2025-07-23T09:28:01.868Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BAJAJFINSV: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.869Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJAJFINSV: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.868Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"DRREDDY","timestamp":"2025-07-23T09:28:01.871Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for DRREDDY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.871Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"BAJAJ-AUTO","timestamp":"2025-07-23T09:28:01.872Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BAJAJ-AUTO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.872Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for DRREDDY: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.871Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BAJAJ-AUTO: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.873Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LT","timestamp":"2025-07-23T09:28:01.964Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.964Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.964Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"EICHERMOT","timestamp":"2025-07-23T09:28:01.977Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for EICHERMOT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.978Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for EICHERMOT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.977Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"DIVISLAB","timestamp":"2025-07-23T09:28:01.980Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for DIVISLAB: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.980Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for DIVISLAB: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:01.980Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ULTRACEMCO: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:02.299Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ULTRACEMCO: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:02.300Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SBILIFE: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:02.379Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SBILIFE: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 2)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:02.379Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","symbol":"CIPLA","timestamp":"2025-07-23T09:28:12.753Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:28:12.753Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for CIPLA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:28:12.753Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:28:12.913Z"}
{"clientVersion":"5.22.0","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:516:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:28:12.913Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"SUNPHARMA","timestamp":"2025-07-23T09:28:19.647Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.648Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for ADANIENT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.650Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for SUNPHARMA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.647Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"ADANIENT","timestamp":"2025-07-23T09:28:19.649Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for ADANIENT: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 7)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.649Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for GRASIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.651Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for LTIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.653Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.655Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"GRASIM","timestamp":"2025-07-23T09:28:19.651Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for GRASIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 1)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.651Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"LTIM","timestamp":"2025-07-23T09:28:19.652Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for LTIM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.653Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"INDUSINDBK","timestamp":"2025-07-23T09:28:19.654Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for INDUSINDBK: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 8)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.654Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.658Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","symbol":"TECHM","timestamp":"2025-07-23T09:28:19.658Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TECHM: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)","timestamp":"2025-07-23T09:28:19.658Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TATACONSUM: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:19.725Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TATACONSUM: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:19.726Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for TATAMOTORS: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.120Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for TATAMOTORS: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 0)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.120Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for JSWSTEEL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.123Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for JSWSTEEL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 4)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.123Z"}
{"clientVersion":"5.22.0","level":"error","message":"Failed to store quote for BPCL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"database-manager","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.277Z"}
{"clientVersion":"5.22.0","level":"error","message":"All providers failed for BPCL: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })","name":"PrismaClientUnknownRequestError","service":"data-collection","stack":"PrismaClientUnknownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(PostgresError { code: \"XX000\", message: \"could not open relation with OID 106517\", severity: \"ERROR\", detail: None, column: None, hint: None }), transient: false })\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7505)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:561:11\n    at async Promise.allSettled (index 9)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)","timestamp":"2025-07-23T09:28:20.277Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:587:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T09:40:15.012Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:587:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T09:50:04.829Z"}
{"level":"error","message":"Failed to get multiple quotes: Failed to parse JSON output: SyntaxError: Unexpected token 'N', ...\" \"price\": NaN,\n    \"\"... is not valid JSON","service":"yfinance-provider","stack":"Error: Failed to parse JSON output: SyntaxError: Unexpected token 'N', ...\" \"price\": NaN,\n    \"\"... is not valid JSON\n    at ChildProcess.<anonymous> (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:71:20)\n    at ChildProcess.emit (node:events:518:28)\n    at ChildProcess.emit (node:domain:489:12)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)","timestamp":"2025-07-23T09:55:46.509Z"}
{"level":"error","message":"yfinance bulk collection failed, falling back to individual requests: Failed to parse JSON output: SyntaxError: Unexpected token 'N', ...\" \"price\": NaN,\n    \"\"... is not valid JSON","service":"data-collection","stack":"Error: Failed to parse JSON output: SyntaxError: Unexpected token 'N', ...\" \"price\": NaN,\n    \"\"... is not valid JSON\n    at ChildProcess.<anonymous> (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:71:20)\n    at ChildProcess.emit (node:events:518:28)\n    at ChildProcess.emit (node:domain:489:12)\n    at maybeClose (node:internal/child_process:1101:16)\n    at Process.ChildProcess._handle.onexit (node:internal/child_process:304:5)","timestamp":"2025-07-23T09:55:46.509Z"}
{"level":"error","message":"Failed to get quote for PVR: No data found for PVR","service":"yfinance-provider","stack":"Error: No data found for PVR\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:55:55.273Z"}
{"level":"error","message":"Failed to get quote for PIIND: No data found for PIIND","service":"yfinance-provider","stack":"Error: No data found for PIIND\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:19\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:55:55.791Z"}
{"level":"error","message":"All providers failed for PIIND: No quote data found for symbol PIIND","service":"data-collection","stack":"Error: No quote data found for symbol PIIND\n    at AlphaVantageProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/AlphaVantageProvider.ts:75:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:555:23\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:570:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:533:7)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:246:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:52:11)","timestamp":"2025-07-23T09:55:57.413Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:587:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T10:10:04.132Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:587:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T10:40:02.604Z"}
{"level":"error","message":"Fundamental data collection failed for TATAMOTORS: No fundamental data found for symbol TATAMOTORS","service":"data-collection","stack":"Error: No fundamental data found for symbol TATAMOTORS\n    at AlphaVantageProvider.getFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/AlphaVantageProvider.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:33)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T11:10:54.922Z"}
{"level":"error","message":"Fundamental data collection failed for RELIANCE: No fundamental data found for symbol RELIANCE","service":"data-collection","stack":"Error: No fundamental data found for symbol RELIANCE\n    at AlphaVantageProvider.getFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/AlphaVantageProvider.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:33)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T11:11:41.680Z"}
{"level":"error","message":"Fundamental data collection failed for RELIANCE: No fundamental data found for symbol RELIANCE","service":"data-collection","stack":"Error: No fundamental data found for symbol RELIANCE\n    at AlphaVantageProvider.getFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/AlphaVantageProvider.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:33)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T11:35:15.786Z"}
{"level":"error","message":"Fundamental data collection failed for RELIANCE: No fundamental data found for symbol RELIANCE","service":"data-collection","stack":"Error: No fundamental data found for symbol RELIANCE\n    at AlphaVantageProvider.getFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/AlphaVantageProvider.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:431:33)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T11:36:16.739Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:614:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:259:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:30:11)","symbol":"BNTX","timestamp":"2025-07-23T15:15:56.636Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:614:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:259:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:30:11)","timestamp":"2025-07-23T15:15:56.637Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for BNTX: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:614:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:259:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:30:11)","timestamp":"2025-07-23T15:15:56.637Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T15:20:01.499Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Failed to store fundamental data for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:30:08.628Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Fundamental data collection failed for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:30:08.629Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Failed to store fundamental data for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:30:22.263Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Fundamental data collection failed for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:30:22.263Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Failed to store fundamental data for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:31:37.598Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Fundamental data collection failed for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:31:37.599Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Failed to store fundamental data for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:32:54.153Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Fundamental data collection failed for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:32:54.156Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Failed to store fundamental data for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:34:53.776Z"}
{"clientVersion":"5.22.0","code":"P2014","level":"error","message":"Fundamental data collection failed for LCID: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.","meta":{"modelName":"FundamentalData","model_a_name":"FundamentalData","model_b_name":"Instrument","relation_name":"FundamentalDataToInstrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.fundamentalData.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:36\n\n  178 await this.ensureInstrument(symbol, exchange, currency)\n  179 \n  180 // Store fundamental data with corrected schema\n→ 181 await prisma.fundamentalData.upsert(\nThe change you are trying to make would violate the required relation 'FundamentalDataToInstrument' between the `FundamentalData` and `Instrument` models.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:181:7)\n    at async DataCollectionService.collectFundamentalData (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:434:11)\n    at async DataCollectionService.discoverAndTrackInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:544:11)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/index.ts:286:5","timestamp":"2025-07-23T15:34:53.776Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T15:40:01.653Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T15:50:01.669Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T16:00:01.915Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T16:10:00.891Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T16:20:01.582Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T16:30:01.619Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for NFLX: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nServer has closed the connection.","meta":{"modelName":"MarketData"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:614:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:259:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:30:11)","timestamp":"2025-07-23T17:12:23.074Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"yfinance bulk collection failed, falling back to individual requests: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nServer has closed the connection.","meta":{"modelName":"MarketData"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.marketData.create()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:31\n\n  62 await this.ensureInstrument(symbol, exchange as Exchange, currency, quote.name, quote.sector, quote.industry)\n  63 \n  64 // Store market data in PostgreSQL\n→ 65 await prisma.marketData.create(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:65:7)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:614:11)\n    at async DataCollectionService.collectQuotes (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:259:11)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:30:11)","timestamp":"2025-07-23T17:12:23.074Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","symbol":"TSLA","timestamp":"2025-07-23T17:12:25.732Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"All providers failed for TSLA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.733Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for TSLA: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 5)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.733Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","symbol":"GOOG","timestamp":"2025-07-23T17:12:25.812Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"All providers failed for GOOG: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.814Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for GOOG: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 3)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.813Z"}
{"error":"\nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","level":"error","message":"Failed to ensure instrument exists","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","symbol":"META","timestamp":"2025-07-23T17:12:25.977Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"All providers failed for META: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"data-collection","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.977Z"}
{"clientVersion":"5.22.0","code":"P1017","level":"error","message":"Failed to store quote for META: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.","meta":{"modelName":"Instrument"},"name":"PrismaClientKnownRequestError","service":"database-manager","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.instrument.upsert()` invocation in\n/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:31\n\n  231 \n  232 private async ensureInstrument(symbol: string, exchange: Exchange, currency: string, name?: string, sector?: string, industry?: string): Promise<void> {\n  233   try {\n→ 234     await prisma.instrument.upsert(\nServer has closed the connection.\n    at $n.handleRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/rakesh/yobi/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async DatabaseManager.ensureInstrument (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:234:7)\n    at async DatabaseManager.storeQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DatabaseManager.ts:62:7)\n    at async /Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:659:11\n    at async Promise.allSettled (index 6)\n    at async DataCollectionService.retryFailedSymbols (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:668:5)\n    at async DataCollectionService.processBatch (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:631:7)","timestamp":"2025-07-23T17:12:25.977Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T17:20:03.042Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T17:30:03.745Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T17:40:04.194Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T17:50:03.471Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:00:03.641Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:10:01.023Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:20:01.231Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:30:01.599Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:40:01.517Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T18:50:01.779Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T19:00:00.937Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T19:10:01.080Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T19:20:01.439Z"}
{"level":"error","message":"Failed to get quote for AAPL: Too Many Requests. Rate limited. Try after a while.","service":"yfinance-provider","stack":"Error: Too Many Requests. Rate limited. Try after a while.\n    at YFinanceProvider.getQuote (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:133:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async YFinanceProvider.getServiceStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/providers/YFinanceProvider.ts:496:7)\n    at async DataCollectionService.getProviderStatus (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/DataCollectionService.ts:685:17)\n    at async Task.node_cron_1.default.schedule.scheduled [as _execution] (/Users/rakesh/yobi/apps/trading-platform/data-collector/src/services/MarketDataScheduler.ts:93:24)","timestamp":"2025-07-23T19:30:01.612Z"}
